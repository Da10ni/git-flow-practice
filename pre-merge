#!/bin/bash

# Pre-Merge Hook to enforce merge restrictions
# Place this as 'update' hook in your repository

refname="$1"
oldrev="$2"
newrev="$3"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

print_error() {
    echo -e "${RED}ERROR: $1${NC}" >&2
}

print_success() {
    echo -e "${GREEN}SUCCESS: $1${NC}" >&2
}

# Protected branches
MAIN_BRANCH="refs/heads/main"
DEVELOPMENT_BRANCH="refs/heads/development"

# Get branch name
branch_name=$(echo "$refname" | sed 's/refs\/heads\///')

# If this is main or development branch receiving a merge
if [[ "$refname" == "$MAIN_BRANCH" || "$refname" == "$DEVELOPMENT_BRANCH" ]]; then
    # Check what's being merged
    if [ "$oldrev" != "0000000000000000000000000000000000000000" ]; then
        # Get commits being added
        commits=$(git rev-list --reverse "$oldrev..$newrev" 2>/dev/null)
        
        for commit in $commits; do
            # Check if this is a merge commit
            parent_count=$(git rev-list --parents -n 1 "$commit" 2>/dev/null | wc -w)
            
            if [ "$parent_count" -gt 2 ]; then
                # This is a merge commit, check what branch was merged
                parents=($(git rev-list --parents -n 1 "$commit" | cut -d' ' -f2-))
                
                # Try to find the branch name that was merged
                for parent in "${parents[@]}"; do
                    if [ "$parent" != "$oldrev" ]; then
                        # Find branches that contain this commit
                        merged_branches=$(git branch -r --contains "$parent" 2>/dev/null | grep -v HEAD | sed 's/.*\///' | head -1)
                        
                        if [ -n "$merged_branches" ]; then
                            merged_branch_name="$merged_branches"
                            
                            # Rule 4: Check merge restrictions
                            if [[ "$refname" == "$MAIN_BRANCH" ]]; then
                                # Only hotfix and release branches can merge to main
                                if [[ ! "$merged_branch_name" =~ ^(hotfix/|release/) ]]; then
                                    print_error "Only hotfix/ and release/ branches can be merged to main"
                                    print_error "Attempted to merge: $merged_branch_name"
                                    exit 1
                                fi
                            elif [[ "$refname" == "$DEVELOPMENT_BRANCH" ]]; then
                                # Only feature, hotfix, and release branches can merge to development
                                if [[ ! "$merged_branch_name" =~ ^(feature/|hotfix/|release/) ]]; then
                                    print_error "Only feature/, hotfix/, and release/ branches can be merged to development"
                                    print_error "Attempted to merge: $merged_branch_name"
                                    exit 1
                                fi
                            fi
                        fi
                    fi
                done
            fi
        done
    fi
fi

print_success "Merge to $branch_name is allowed"
exit 0
